{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","estadoAnterior","onChange","target","value","type","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,uBAAMC,SAPe,SAACC,GACtBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAc,OAAKP,GAAL,mBAAmBO,OACnDN,EAAc,KAGd,UACI,8CACA,uBACAO,SAdkB,SAACL,GACvBF,EAAcE,EAAEM,OAAOC,QAcnBA,MAAOV,EACPW,KAAK,a,uBCtBJC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,iDAEmCF,EAFnC,6BACJ,oCADI,SAGAG,MAAMD,GAHN,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QATtB,kBAaZK,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEzB,OADAM,QAAQC,IAAIP,GAER,sBAAKQ,UAAU,yCAAf,UACI,qBAAKC,IAAKT,EAAIP,IAAKiB,IAAKV,EAAIE,QAC5B,4BAAIF,EAAIE,YCFPS,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BoB,KAAM,GACNe,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAepC,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAACC,GACpBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACrB,IAEGsB,EDZiBK,CAAa3B,GAA9BM,EAF4B,EAE5BA,KAAMe,EAFsB,EAEtBA,QAEb,OACI,qCACI,6BAAKrB,IACJqB,GAAS,4CACV,qBAAKJ,UAAU,YAAf,SACKX,EAAKE,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,CAEAA,IAAKA,GADAA,EAAIC,aEZtB,SAASkB,IAAe,IAAD,EACU1C,mBAAS,CAAC,QADpB,mBACnB2C,EADmB,KACP5C,EADO,KAQ1B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACC4C,EAAWrB,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAUA,GADLA,S,MCdrB8B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.4ea8ef9e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const inputHandleChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const formHandleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0)\r\n            setCategories(estadoAnterior => [inputValue,...estadoAnterior]);\r\n        setInputValue('');\r\n    }\r\n    return (\r\n        <form onSubmit={formHandleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input \r\n            onChange={inputHandleChange}\r\n            value={inputValue}\r\n            type=\"text\"\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\nsetCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const apiKey = 'mfldU9gWFcl5FnitSD6MEFvR92s9lSg1';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    console.log(img);\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={img.url} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs.js';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs.js';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading&&<p>Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {data.map((img)=>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    img={img} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs)=>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport function GifExpertApp(){\r\n    const [categories, setCategories] = useState(['DBZ']);\r\n\r\n    //const handleAdd = ()=>{\r\n        //setCategories([...categories,'kdk']);\r\n        //setCategories(estadoAnterior => [...estadoAnterior,'kdk']);\r\n    //}\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            {categories.map((category)=>(\r\n                <GifGrid \r\n                key={category}\r\n                category={category} \r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}